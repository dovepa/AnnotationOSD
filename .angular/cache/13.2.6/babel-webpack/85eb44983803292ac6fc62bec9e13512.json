{"ast":null,"code":"import _asyncToGenerator from \"/home/dove/Documents/tchek/AnnotationOSD/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport '../../assets/openseadragon.min';\nimport '../../assets/fabric.adapted';\nimport '../../assets/openseadragon-fabricjs-overlay';\nlet AnnotationOSDService = class AnnotationOSDService {\n  constructor(debug = false) {\n    this.DEBUG = false;\n    this.DEBUG = debug;\n  }\n  playerFactory(type, id, link) {\n    return new Promise((resolve, reject) => {\n      this.viewer = OSD({\n        id,\n        tileSources: type === 'dzi' ? link : {\n          type: 'image',\n          url: link\n        },\n        gestureSettingsTouch: {\n          pinchRotate: false\n        },\n        showRotationControl: false,\n        showNavigationControl: false,\n        showFlipControl: false,\n        zoomPerClick: 1,\n        imageLoaderLimit: 1,\n        constrainDuringPan: true,\n        debugMode: this.DEBUG\n      });\n      const subjectZoom = new Subject();\n      this.viewer.addHandler('zoom', e => {\n        subjectZoom.next(e);\n      });\n      subjectZoom.pipe(debounceTime(50)).subscribe(() => {\n        this.calculateRatio();\n        // this.resetStrokeWidth();\n      });\n\n      this.viewer.addOnceHandler('open', e => {\n        this.calculateRatio();\n        resolve(this);\n      });\n      const subjectResize = new Subject();\n      this.viewer.addHandler('resize', e => {\n        subjectResize.next(e);\n      });\n      subjectResize.pipe(debounceTime(200)).subscribe(() => {\n        this.goHome();\n      });\n    });\n  }\n  //\n  // public setHome(point: Point, width: number, height: number) {\n  //   const homePoint = this.viewer.viewport.imageToViewerElementCoordinates(new OSD.Point(this.imageWidth / 2, this.imageHeight / 2));\n  //   const w = this.imageWidth / width;\n  //   const h = this.imageHeight / height;\n  //   const zoom = 4; // w > h ? h : w;\n  //   console.log(homePoint, zoom, this.imageWidth, this.imageHeight);\n  //   this.viewer.viewport.zoomTo(1.2, homePoint, false);\n  // }\n  // private resetStrokeWidth() {\n  //   if (this.canvas) {\n  //     const w = 2; // desired width in pixels\n  //     const strokeWidth = w / this.canvas.getZoom();\n  //     for (const object of this.canvas.getObjects()) {\n  //       object.set('strokeUniform', true);\n  //       object.set('strokeWidth', strokeWidth);\n  //       if (object.get('radius')) {\n  //         object.set('radius', 5 / this.canvas.getZoom());\n  //       }\n  //       // can also update other things here\n  //     }\n  //   }\n  // }\n  calculateRatio() {\n    // this.imageWidth = this.viewer.source.dimensions.x;\n    // this.imageHeight = this.viewer.source.dimensions.y;\n    // this.containerWidth = this.viewer.viewport.getContainerSize().x;\n    // this.containerHeight = this.viewer.viewport.getContainerSize().y;\n    // this.zoomToZoomLevelRatio = this.containerWidth / this.imageWidth;\n    // this.scale = this.viewer.viewport.getZoom(true) * this.zoomToZoomLevelRatio;\n  }\n  goHome() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // if (!this.home) this.viewer.viewport.goHome(false);\n      // else this.viewer.viewport.fitBounds(this.home, false);\n      // this.setHome(null, null, null);\n      return _this;\n    })();\n  }\n  addCanvas() {\n    this.canvas = this.viewer.fabricjsOverlay({\n      scale: this.imageWidth * this.scale\n    }).fabricCanvas();\n    return this;\n  }\n};\nAnnotationOSDService = __decorate([Injectable({\n  providedIn: 'root'\n})], AnnotationOSDService);\nexport { AnnotationOSDService };","map":{"version":3,"names":["__decorate","Injectable","Subject","debounceTime","AnnotationOSDService","constructor","debug","DEBUG","playerFactory","type","id","link","Promise","resolve","reject","viewer","OSD","tileSources","url","gestureSettingsTouch","pinchRotate","showRotationControl","showNavigationControl","showFlipControl","zoomPerClick","imageLoaderLimit","constrainDuringPan","debugMode","subjectZoom","addHandler","e","next","pipe","subscribe","calculateRatio","addOnceHandler","subjectResize","goHome","addCanvas","canvas","fabricjsOverlay","scale","imageWidth","fabricCanvas","providedIn"],"sources":["/home/dove/Documents/tchek/AnnotationOSD/projects/annotation-osd/src/lib/annotation-osd.service.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport '../../assets/openseadragon.min';\nimport '../../assets/fabric.adapted';\nimport '../../assets/openseadragon-fabricjs-overlay';\nlet AnnotationOSDService = class AnnotationOSDService {\n    constructor(debug = false) {\n        this.DEBUG = false;\n        this.DEBUG = debug;\n    }\n    playerFactory(type, id, link) {\n        return new Promise((resolve, reject) => {\n            this.viewer = OSD({\n                id,\n                tileSources: type === 'dzi' ? link : { type: 'image', url: link },\n                gestureSettingsTouch: { pinchRotate: false },\n                showRotationControl: false,\n                showNavigationControl: false,\n                showFlipControl: false,\n                zoomPerClick: 1,\n                imageLoaderLimit: 1,\n                constrainDuringPan: true,\n                debugMode: this.DEBUG,\n            });\n            const subjectZoom = new Subject();\n            this.viewer.addHandler('zoom', (e) => {\n                subjectZoom.next(e);\n            });\n            subjectZoom.pipe(debounceTime(50)).subscribe(() => {\n                this.calculateRatio();\n                // this.resetStrokeWidth();\n            });\n            this.viewer.addOnceHandler('open', (e) => {\n                this.calculateRatio();\n                resolve(this);\n            });\n            const subjectResize = new Subject();\n            this.viewer.addHandler('resize', (e) => {\n                subjectResize.next(e);\n            });\n            subjectResize.pipe(debounceTime(200)).subscribe(() => {\n                this.goHome();\n            });\n        });\n    }\n    //\n    // public setHome(point: Point, width: number, height: number) {\n    //   const homePoint = this.viewer.viewport.imageToViewerElementCoordinates(new OSD.Point(this.imageWidth / 2, this.imageHeight / 2));\n    //   const w = this.imageWidth / width;\n    //   const h = this.imageHeight / height;\n    //   const zoom = 4; // w > h ? h : w;\n    //   console.log(homePoint, zoom, this.imageWidth, this.imageHeight);\n    //   this.viewer.viewport.zoomTo(1.2, homePoint, false);\n    // }\n    // private resetStrokeWidth() {\n    //   if (this.canvas) {\n    //     const w = 2; // desired width in pixels\n    //     const strokeWidth = w / this.canvas.getZoom();\n    //     for (const object of this.canvas.getObjects()) {\n    //       object.set('strokeUniform', true);\n    //       object.set('strokeWidth', strokeWidth);\n    //       if (object.get('radius')) {\n    //         object.set('radius', 5 / this.canvas.getZoom());\n    //       }\n    //       // can also update other things here\n    //     }\n    //   }\n    // }\n    calculateRatio() {\n        // this.imageWidth = this.viewer.source.dimensions.x;\n        // this.imageHeight = this.viewer.source.dimensions.y;\n        // this.containerWidth = this.viewer.viewport.getContainerSize().x;\n        // this.containerHeight = this.viewer.viewport.getContainerSize().y;\n        // this.zoomToZoomLevelRatio = this.containerWidth / this.imageWidth;\n        // this.scale = this.viewer.viewport.getZoom(true) * this.zoomToZoomLevelRatio;\n    }\n    async goHome() {\n        // if (!this.home) this.viewer.viewport.goHome(false);\n        // else this.viewer.viewport.fitBounds(this.home, false);\n        // this.setHome(null, null, null);\n        return this;\n    }\n    addCanvas() {\n        this.canvas = this.viewer\n            .fabricjsOverlay({ scale: this.imageWidth * this.scale })\n            .fabricCanvas();\n        return this;\n    }\n};\nAnnotationOSDService = __decorate([\n    Injectable({\n        providedIn: 'root',\n    })\n], AnnotationOSDService);\nexport { AnnotationOSDService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}